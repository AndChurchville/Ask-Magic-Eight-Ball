{"version":3,"sources":["Messages.js","styles.js","components/Question.js","components/Prediction.js","assets/chara-img.svg","App.js","index.js"],"names":["messageData","answer","color","breakpoint","medium","QuestionForm","styled","form","UserAsk","input","SubmitBtn","button","Question","getMessage","useState","question","setQuestion","onSubmit","e","value","placeholder","onChange","target","type","PredictionContainer","div","AnswerBlock","ContainerQuestion","Prediction","message","setMessage","bubbleVisbility","setBubbleVisibility","randomMsg","Math","floor","random","length","style","preventDefault","darkPurple","olive","Container","Header","h1","ImageWrapper","App","src","eightball","alt","ReactDOM","render","document","getElementById"],"mappings":"gNAAaA,EAAc,CACzB,CACEC,OAAQ,gBACRC,MAAO,WAET,CACED,OAAQ,qBACRC,MAAO,WAET,CACED,OAAQ,kBACRC,MAAO,WAET,CACED,OAAQ,iBACRC,MAAO,WAET,CACED,OAAQ,qBACRC,MAAO,WAET,CACED,OAAQ,mBACRC,MAAO,WAET,CACED,OAAQ,cACRC,MAAO,WAET,CACED,OAAQ,wBACRC,MAAO,WAET,CACED,OAAQ,yBACRC,MAAO,WAET,CACED,OAAQ,aACRC,MAAO,WAET,CACED,OAAQ,wBACRC,MAAO,WAET,CACED,OAAQ,kBACRC,MAAO,WAET,CACED,OAAQ,0BACRC,MAAO,WAET,CACED,OAAQ,qBACRC,MAAO,WAET,CACED,OAAQ,4BACRC,MAAO,WAET,CACED,OAAQ,iBACRC,MAAO,WAET,CACED,OAAQ,qBACRC,MAAO,WAET,CACED,OAAQ,sBACRC,MAAO,WAET,CACED,OAAQ,gBACRC,MAAO,WAET,CACED,OAAQ,eACRC,MAAO,Y,OC/EEC,EAEH,IAKGD,EACC,UADDA,EAIJ,U,OCqBDE,EAAWD,EAEbE,EAAeC,IAAOC,KAAV,sKAEKH,GAMjBI,EAAUF,IAAOG,MAAV,oQAaPC,EAAYJ,IAAOK,OAAV,6bAiBQP,GAMRQ,EAzEE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OACE,mCACE,eAACX,EAAD,CAAcY,SAVA,SAACC,GAEbH,IACFF,EAAWK,GACXF,EAAY,MAMZ,UACE,cAACR,EAAD,CACEW,MAAOJ,EACPK,YAAY,8BACZC,SAAU,SAACH,GACTF,EAAYE,EAAEI,OAAOH,UAGzB,cAACT,EAAD,CAAWa,KAAK,SAAhB,2BCkBAnB,EAAWD,EAEbqB,EAAsBlB,IAAOmB,IAAV,qLAMFrB,GAKjBsB,EAAcpB,IAAOmB,IAAV,uMAaXE,EAAoBrB,IAAOmB,IAAV,iDAIRG,EAnEI,SAAC,GAAiB,EAAfb,SAAgB,IAEpC,EAA8BD,mBAAS,mBAAvC,mBAAOe,EAAP,KAAgBC,EAAhB,KAGA,EAA+ChB,oBAAS,GAAxD,mBAAOiB,EAAP,KAAwBC,EAAxB,KAGMC,EAAYjC,EAAYkC,KAAKC,MAAMD,KAAKE,SAAWpC,EAAYqC,SAQrE,OACE,mCACE,eAACb,EAAD,WACGO,EACC,cAACL,EAAD,CACEY,MAAO,CACL,UAAWT,EAAQ3B,OAFvB,SAKE,6BAAK2B,EAAQ5B,WAEb,KAEJ,cAAC0B,EAAD,UACE,cAAC,EAAD,CAAUd,WApBC,SAACK,GAGlB,OAFAA,EAAEqB,iBAEKT,EAAWG,GAAYD,GAAoB,cCpBvC,MAA0B,sCCoBzC,IAAQQ,EAAsBtC,EAAVuC,EAAUvC,EAExBwC,EAAYpC,IAAOmB,IAAV,4IAIOe,GAGhBG,EAASrC,IAAOsC,GAAV,gFACDH,GAGLI,EAAevC,IAAOmB,IAAV,sFAKHqB,EAhCf,WACE,OACE,mCACE,eAACJ,EAAD,WACE,cAACC,EAAD,qCACA,cAACE,EAAD,UACE,qBAAKE,IAAKC,EAAWC,IAAI,gBAE3B,cAAC,EAAD,UCTRC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.14d66639.chunk.js","sourcesContent":["export const messageData = [\r\n  {\r\n    answer: \"It is Certain\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"It is decidedly so\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Without a doubt\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Yes definitely\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"You may rely on it\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"As I see it, yes\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Most likely\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Outcome looking good!\",\r\n    color: \"#9FC087\",\r\n  },\r\n  {\r\n    answer: \"All signs point to yes\",\r\n    color: \"#9FC087\",\r\n  },\r\n  {\r\n    answer: \"Yeah maybe\",\r\n    color: \"#9FC087\",\r\n  },\r\n  {\r\n    answer: \"Reply hazy, try again\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Ask again later\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Better not tell you now\",\r\n    color: \"#9984D4\",\r\n  },\r\n  {\r\n    answer: \"Cannot predict now\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \"Concentrate and ask again\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \"My reply is no\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \" My sources say no\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \"Outlook not so good\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \"Very doubtful\",\r\n    color: \"#EAD637\",\r\n  },\r\n  {\r\n    answer: \"Probably not\",\r\n    color: \"#EAD637\",\r\n  },\r\n];\r\n","export const breakpoint = {\r\n  small: 0,\r\n  medium: 768,\r\n  large: 1024,\r\n  extraLarge: 1216,\r\n};\r\n\r\nexport const color = {\r\n  darkPurple: \"#230C33\",\r\n  purple: \"#592E83\",\r\n  mediumPurple: \"#9984D4\",\r\n  olive: \"#9FC087\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { breakpoint } from \"../styles\";\r\n\r\n//User will type in a question\r\nconst Question = ({ getMessage }) => {\r\n  const [question, setQuestion] = useState(\"\");\r\n\r\n  const getAnswer = (e) => {\r\n    // e.preventDefault();\r\n    if (question) {\r\n      getMessage(e);\r\n      setQuestion(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <QuestionForm onSubmit={getAnswer}>\r\n        <UserAsk\r\n          value={question}\r\n          placeholder=\" ex.Will I win the lottery?\"\r\n          onChange={(e) => {\r\n            setQuestion(e.target.value);\r\n          }}\r\n        />\r\n        <SubmitBtn type=\"submit\">Ask me!</SubmitBtn>\r\n      </QuestionForm>\r\n    </>\r\n  );\r\n};\r\n\r\nconst { medium } = breakpoint;\r\n\r\nconst QuestionForm = styled.form`\r\n  display: block;\r\n  @media (min-width: ${medium}px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-content: center;\r\n  }\r\n`;\r\nconst UserAsk = styled.input`\r\n  display: block;\r\n  padding: 10px;\r\n  margin: 8px 0;\r\n  width: 200px;\r\n  height: 20px;\r\n  border: 0;\r\n  border-bottom: 1px solid #eee;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\r\n  text-align: center;\r\n`;\r\n\r\nconst SubmitBtn = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  background-color: #9fc087;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #c9dcbc;\r\n    color: #230c33;\r\n  }\r\n\r\n  @media (min-width: ${medium}px) {\r\n    padding: 10px;\r\n    margin: 8px 0 0 15px;\r\n    height: 40px;\r\n  }\r\n`;\r\nexport default Question;\r\n","import React, { useState } from \"react\";\r\nimport { messageData } from \"../Messages\";\r\nimport Question from \"./Question\";\r\nimport styled from \"styled-components\";\r\nimport { breakpoint } from \"../styles\";\r\n\r\n// Magic 8-ball's answers will show up in a speech bubble\r\nconst Prediction = ({ question }) => {\r\n  //use state to store and render the data\r\n  const [message, setMessage] = useState(\"Ask Me Anything\");\r\n\r\n  //hide speech bubble until user submits question\r\n  const [bubbleVisbility, setBubbleVisibility] = useState(false);\r\n\r\n  //get random answer from Messages file\r\n  const randomMsg = messageData[Math.floor(Math.random() * messageData.length)];\r\n\r\n  const getMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    return setMessage(randomMsg), setBubbleVisibility(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PredictionContainer>\r\n        {bubbleVisbility ? (\r\n          <AnswerBlock\r\n            style={{\r\n              \"--color\": message.color,\r\n            }}\r\n          >\r\n            <h1>{message.answer}</h1>\r\n          </AnswerBlock>\r\n        ) : null}\r\n\r\n        <ContainerQuestion>\r\n          <Question getMessage={getMessage} />\r\n        </ContainerQuestion>\r\n      </PredictionContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst { medium } = breakpoint;\r\n\r\nconst PredictionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (min-width: ${medium}px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nconst AnswerBlock = styled.div`\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  font-size: 0.5rem;\r\n  background: var(--color, gray);\r\n  width: 100%;\r\n\r\n  h1 {\r\n    color: #0c1b33;\r\n  }\r\n`;\r\n\r\nconst ContainerQuestion = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport default Prediction;\r\n","export default __webpack_public_path__ + \"static/media/chara-img.4fe792b6.svg\";","import \"./App.css\";\nimport Prediction from \"./components/Prediction\";\nimport styled from \"styled-components\";\nimport { color } from \"./styles\";\nimport eightball from \"./assets/chara-img.svg\";\n\nfunction App() {\n  return (\n    <>\n      <Container>\n        <Header>Hello Magic Eight Ball</Header>\n        <ImageWrapper>\n          <img src={eightball} alt=\"character\" />\n        </ImageWrapper>\n        <Prediction />\n      </Container>\n    </>\n  );\n}\n\nconst { darkPurple, olive } = color;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${darkPurple};\n  height: 100vh;\n`;\nconst Header = styled.h1`\n  color: ${olive};\n  font-family: \"Megrim\", sans-serif;\n`;\nconst ImageWrapper = styled.div`\n  width: 240px;\n  height: auto;\n  object-fit: contain;\n`;\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}